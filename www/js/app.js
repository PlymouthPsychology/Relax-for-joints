// Generated by CoffeeScript 1.9.3
(function() {
  var serialize;

  angular.module('pears', ['ionic', 'pears.controllers', 'pears.services', 'hc.marked', 'ngStorage', 'ngCordova', 'ionic-audio']).run(function($ionicPlatform, $state, $rootScope, $sce, $ionicHistory) {
    var pageorder, setupanalytics;
    setupanalytics = function() {
      if (window.analytics) {
        window.analytics.startTrackerWithId('UA-67495825-1');
        window.analytics.setUserId(device.uuid);
        window.analytics.trackEvent('UserAction', 'Session start');
        return console.log("Tracking with userid " + device.uuid);
      } else {
        return console.log("No tracking code available. Not logging usage");
      }
    };
    document.addEventListener("deviceready", setupanalytics, false);
    $rootScope.$on('$stateChangeSuccess', function(event, toState, toParams, fromState, fromParams) {
      var url;
      url = toState.url + "?" + serialize(toParams);
      return (window.analytics != null) && window.analytics.trackView(url);
    });
    $rootScope.trustSrc = function(src) {
      return $sce.trustAsResourceUrl(src);
    };
    pageorder = ["tabs.home", "tabs.aftersurgery", "tabs.recovering", "tabs.relaxation", "tabs.breathing", "tabs.pmr", "tabs.place", "tabs.suggestion", "tabs.recordings"];
    $rootScope.turnpage = function(direction) {
      var currindex, next;
      direction = direction === "back" && -1 || 1;
      currindex = pageorder.indexOf($state.$current.toString());
      next = currindex + direction;
      if (next > -1 && next < pageorder.length) {
        return $state.go(pageorder[currindex + direction]);
      }
    };
    $rootScope.checkConnection = function() {
      var ref;
      return (typeof navigator !== "undefined" && navigator !== null ? (ref = navigator.connection) != null ? ref.type : void 0 : void 0) || false;
    };
    $ionicPlatform.ready(function() {
      $rootScope.cordovaExists = (window.cordova != null) && true || false;
      if (window.cordova && window.cordova.plugins && window.cordova.plugins.Keyboard) {
        cordova.plugins.Keyboard.hideKeyboardAccessoryBar(true);
        cordova.plugins.Keyboard.disableScroll(true);
      }
      if (window.StatusBar) {
        StatusBar.styleLightContent();
      }
    });
  }).config(function($stateProvider, $urlRouterProvider) {
    $stateProvider.state('moreinformation', {
      url: '/moreinformation',
      templateUrl: 'moreinformation.html'
    }).state('settings', {
      url: '/settings',
      templateUrl: 'templates/settings.html',
      controller: 'SettingsCtrl'
    }).state('tabs', {
      url: '/tab',
      abstract: true,
      templateUrl: 'tabs.html'
    }).state('tabs.home', {
      url: '/home',
      views: {
        'home-tab': {
          templateUrl: 'home.html',
          controller: 'HomeTabCtrl'
        }
      }
    }).state('tabs.recovering', {
      url: '/recovering',
      views: {
        'recovery-tab': {
          templateUrl: 'recovering.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.aftersurgery', {
      url: '/aftersurgery',
      views: {
        'recovery-tab': {
          templateUrl: 'aftersurgery.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.relaxation', {
      url: '/relaxation',
      views: {
        'recovery-tab': {
          templateUrl: 'relaxation.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.suggestion', {
      url: '/suggestion',
      views: {
        'recovery-tab': {
          templateUrl: 'suggestion.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.breathing', {
      url: '/relaxation/breathing/',
      views: {
        'recovery-tab': {
          templateUrl: 'relaxation-breathing.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.pmr', {
      url: '/relaxation/pmr/',
      views: {
        'recovery-tab': {
          templateUrl: 'relaxation-pmr.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.place', {
      url: '/relaxation/place/',
      views: {
        'recovery-tab': {
          templateUrl: 'relaxation-place.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.recordings', {
      url: '/recordings',
      views: {
        'recordings-tab': {
          templateUrl: 'templates/recordings.html',
          controller: 'ContentPageCtrl'
        }
      }
    }).state('tabs.recording-detail', {
      url: '/recordings/:recordingId',
      views: {
        'recordings-tab': {
          templateUrl: 'templates/recording-detail.html',
          controller: 'RecordingDetailCtrl'
        }
      }
    });
    return $urlRouterProvider.otherwise('/tab/home');
  });

  serialize = function(obj) {
    var p, str;
    str = [];
    for (p in obj) {
      str.push(encodeURIComponent(p) + '=' + encodeURIComponent(obj[p]));
    }
    return str.join('&');
  };

}).call(this);
